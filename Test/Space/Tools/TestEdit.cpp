/**
 * ------------------------------------------------------------------------------------------------
 * File:   TestSpliter.cpp
 * Author: Luis Monteiro
 *
 * Created on February  2, 2019, 10:21 AM
 * ------------------------------------------------------------------------------------------------
 */
#include <gtest/gtest.h>
/**
 * space
 */
#include "SEdit.h"
#include "SLog.h"
/**
 * -------------------------------------------------------------------------------------------------
 * Edit - Models
 * -------------------------------------------------------------------------------------------------
 */
auto var = Obj{
    {Key("a"), Obj{
        {Key("a"), Obj("a")},
        {Key("b"), Obj(1)},
        {Key("c"), Obj(3.5)}
    }},
    {Key("b"), Obj{
        Obj(1),
        Obj(2),
        Obj(3)
    }},
};
auto var_b = Obj{
    {Key("a"), Obj{
        {Key("a"), Obj("a")},
        {Key("b"), Obj(1)},
        {Key("c"), Obj(3.5)}
    }},
    {Key("b"), Obj{
        Obj(1),
        Obj(2),
        Obj(3)
    }},
};
/**
 * -------------------------------------------------------------------------------------------------
 * Edit - Remove
 * -------------------------------------------------------------------------------------------------
 */
TEST(SEdit, Remove)
{ 
    // settings ---------------------------------------------------------------
    auto var = Obj{
        {Key("a"), Obj{
            {Key("a"), Obj("a")},
            {Key("b"), Obj(1)},
            {Key("c"), Obj(3.5)}
        }},
        {Key("b"), Obj{
            Obj(1),
            Obj(2),
            Obj(3)
        }},
    };  
    // test 1 -----------------------------------------------------------------
    EXPECT_EQ(
        Edit::Remove(var, var), 
        Obj()
    );

    // test 2 -----------------------------------------------------------------
    EXPECT_EQ(
        Var::Trim(Edit::Remove(Var::Copy(var), Var::Copy(var))),
        Obj()
    );

    // test 3 -----------------------------------------------------------------
    EXPECT_TRUE(Edit::Match(
        Var::Trim(Edit::Remove(Edit::Delete("a", Var::Copy(var)), var)), Obj({
        {Key("a"), Obj{
            {Key("a"), Obj("a")},
            {Key("b"), Obj(1)},
            {Key("c"), Obj(3.5)}
        }}
    }))); 
}
/**
 * ------------------------------------------------------------------------------------------------
 * End
 * ------------------------------------------------------------------------------------------------
 */

